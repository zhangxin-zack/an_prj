<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.scorer.client.dao.mysql_dao1.ManagerDao">

    <resultMap id="manager" type="com.scorer.client.entity.Manager">
        <result column="id" property="id"/>
        <result column="school_id" property="schoolId"/>
        <result column="username" property="username"/>
        <result column="password" property="password"/>
        <result column="realname" property="realname"/>
        <result column="email" property="email"/>
        <result column="create_time" property="createTime"/>
        <result column="login_time" property="loginTime"/>
        <result column="phone" property="phoneNo"/>
        <result column="status_flag" property="statusFlag"/>
        <result column="verify" property="verify"/>
        <result column="role_id" property="currentRoleId"/>
    </resultMap>

    <resultMap id="role" type="com.scorer.client.entity.Role">
        <result column="id" property="roleId"/>
        <result column="title" property="roleTitle"/>
    </resultMap>

    <resultMap id="menu" type="com.scorer.client.entity.Menu">
        <result column="id" property="menuId"/>
        <result column="pid" property="menuPid"/>
        <result column="title" property="menuTitle"/>
        <result column="path" property="path"/>
        <result column="icon" property="icon"/>
    </resultMap>

    <update id="setLoginTime">
        UPDATE manager SET login_time=UNIX_TIMESTAMP(NOW())*1000 WHERE id=#{id}
    </update>

    <select id="login" resultMap="manager">
        SELECT
            m.id,
            m.school_id,
            m.username,
            m.realname,
            m.create_time,
            m.PASSWORD,
            phone
        FROM
            manager m
        WHERE
            m.username = #{username}
            AND m.password = #{password} AND m.status_flag=0
    </select>

    <select id="getAgentArea" resultType="map">
        SELECT
            province,
            city,
            village
        FROM
            agent_area
        WHERE agent_id = #{agentId}
    </select>

    <insert id="saveAgentRole">
        insert into agent_area(
            agent_id, province, city, village)
        values
            (#{agentId}, #{province}, #{city}, #{village})
    </insert>

    <delete id="deleteAgentRole">
        delete from agent_area where id in
        <foreach collection="list" item="agentAreaId" open="(" separator="," close=")">
            #{agentAreaId}
        </foreach>
    </delete>


    <select id="loginManage" resultMap="manager">
        SELECT
            m.id,
            m.school_id,
            m.username,
            m.realname,
            m.create_time,
            m.PASSWORD,
            m.phone,
            mr.role_id
        FROM
            manager m
        LEFT JOIN
            manager_role mr
        ON m.id = mr.manager_id
        WHERE
            m.username = #{username}
            AND m.password = #{password} AND m.status_flag=0 AND m.school_id IS NULL
    </select>

    <select id="loginSchool" resultMap="manager">
        SELECT
            m.id,
            m.school_id,
            m.username,
            m.realname,
            m.create_time,
            m.PASSWORD,
            m.phone
        FROM
            manager m
        WHERE
            m.username = #{username}
            AND m.password = #{password} AND m.status_flag=0 AND m.school_id IS NOT NULL
    </select>

    <select id="getManagerCount" resultType="long">
        SELECT count(id)
        FROM manager
        WHERE 1 = 1
    </select>

    <select id="getManagerList" resultMap="manager">
        SELECT
            id,
            school_id,
            username,
            password,
            email,
            realname,
            create_time,
            login_time,
        phone
        FROM manager
        WHERE 1 = 1
        <if test="searchs.username!=null and searchs.username!=''">
            AND username LIKE CONCAT('%',#{searchs.username},'%')
        </if>
        <foreach collection="sort" index="index" item="item" open="ORDER BY" separator=",">
            ${item.field} ${item['type']}
        </foreach>
        LIMIT #{startIndex}, #{pageSize}
    </select>

    <insert id="addManager">
        <selectKey resultType="Long" keyColumn="id" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into manager(school_id, username,password,phone,status_flag,realname,email,create_time)
        values (#{schoolId}, #{username},#{password},#{phoneNo},#{statusFlag},#{realname},#{email},UNIX_TIMESTAMP(NOW())*1000)
    </insert>

    <insert id="addManagerRole">
        INSERT INTO manager_role (manager_id, role_id)
        VALUES (#{0}, #{1})
    </insert>

    <delete id="deleteManagerRole">
        DELETE FROM manager_role
        WHERE manager_id = #{id}
    </delete>

    <delete id="deleteManagersRole">
        DELETE FROM manager_role
        WHERE manager_id in
        <foreach collection="list" item="ManagerId" open="(" separator="," close=")">
            #{ManagerId}
        </foreach>
    </delete>

    <update id="updateManager">
        update manager
        <set>
            <if test="schoolId!= null and schoolId != 0 ">
                school_id = #{schoolId},
            </if>
            <if test="username!= null and username!= '' ">
                username = #{username},
            </if>
            <if test="password!= null and password!= '' ">
                password = #{password},
            </if>
            <if test="phoneNo!= null and phoneNo!= '' ">
                phone = #{phoneNo},
            </if>
            <if test="realname!= null and realname!= '' ">
                realname = #{realname},
            </if>
            <if test="email!= null and email!= '' ">
                email = #{email},
            </if>
            <if test="statusFlag!= null">
                status_flag = #{statusFlag},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteManager">
        delete from manager where id in
        <foreach collection="list" item="ManagerId" open="(" separator="," close=")">
            #{ManagerId}
        </foreach>
    </delete>

    <select id="getRoleCount" resultType="long">
        SELECT count(id)
        FROM role
        WHERE 1 = 1
    </select>

    <select id="getRoleList" resultMap="role">
        SELECT
            id,
            title
        FROM role
        WHERE 1 = 1
        <if test="searchs.roleTitle!=null and searchs.roleTitle!=''">
            AND title LIKE CONCAT('%',#{searchs.roleTitle},'%')
        </if>
        <foreach collection="sort" index="index" item="item" open="ORDER BY" separator=",">
            ${item.field} ${item['type']}
        </foreach>
        LIMIT #{startIndex}, #{pageSize}
    </select>

    <insert id="addRole">
        INSERT INTO role (title) VALUES (#{roleTitle})
    </insert>

    <delete id="deleteRole">
        delete from role where id in
        <foreach collection="list" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <update id="updateRole">
        update role
        <set>
            <if test="roleTitle!= null and roleTitle != '' ">
                title = #{roleTitle},
            </if>
        </set>
        where id = #{id}
    </update>

    <delete id="deleteManagersRoleByRoleIds">
        DELETE FROM manager_role
        WHERE role_id in
        <foreach collection="list" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <delete id="deleteRoleMenuByRoleIds">
        DELETE FROM role_rights
        WHERE role_id in
        <foreach collection="list" item="roleId" open="(" separator="," close=")">
            #{roleId}
        </foreach>
    </delete>

    <delete id="deleteRoleMenuByMenuIds">
        DELETE FROM role_rights
        WHERE sys_menu_id in
        <foreach collection="list" item="menuId" open="(" separator="," close=")">
            #{menuId}
        </foreach>
    </delete>

    <insert id="addMenu">
        INSERT INTO sys_menu (pid, title, path, icon) VALUES (#{menuPid}, #{menuTitle}, #{path}, #{icon})
    </insert>

    <delete id="deleteMenus">
        delete from sys_menu where id in
        <foreach collection="list" item="menuId" open="(" separator="," close=")">
            #{menuId}
        </foreach>
    </delete>

    <update id="updateMenu">
        update sys_menu
        <set>
            <if test="menuTitle!= null and menuTitle != '' ">
                title = #{menuTitle},
            </if>
            <if test="path!= null and path != '' ">
                path = #{path},
            </if>
            <if test="icon!= null and icon != '' ">
                icon = #{icon},
            </if>
        </set>
        where id = #{menuId}
    </update>


    <select id="getAllRoleList" resultMap="role">
        SELECT
            id,
            title
        FROM role
    </select>

    <insert id="addRoleMenu">
        INSERT INTO role_rights (role_id, sys_menu_id)
        VALUES (#{0}, #{1})
    </insert>

    <delete id="deleteRoleMenu">
        DELETE FROM role_rights
        WHERE role_id = #{id}
    </delete>

    <select id="getAllMenuList" resultMap="menu">
        SELECT
            m.id,
            m.pid,
            m.path,
            m.title,
            m.icon
        FROM sys_menu m
    </select>

    <select id="getActionMenuList" resultMap="menu">
        SELECT
            m.id,
            m.pid,
            m.path,
            m.title,
            m.icon
        FROM
            sys_menu m
            JOIN role_rights rr ON m.id = rr.sys_menu_id
            JOIN role r ON rr.role_id = r.id
        WHERE
            role_id = #{roleId}
    </select>

    <select id="getRoleMenuIds" resultType="long">
        SELECT
            m.sys_menu_id
        FROM role_rights m
        WHERE role_id = #{roleId}
    </select>

    <select id="getAgentCount" resultType="long">
        SELECT count(m.id)
        FROM manager m
        JOIN manager_role mr
        ON m.id = mr.manager_id
        WHERE 1 = 1
        AND mr.role_id = 2
        <if test="searchs.username!=null and searchs.username!=''">
            AND m.username LIKE CONCAT('%',#{searchs.username},'%')
        </if>
        <if test="searchs.verify!=null">
            AND m.verify = #{searchs.verify}
        </if>
        AND mr.role_id = 2
    </select>

    <select id="getAgentList" resultMap="manager">
        SELECT
            m.id,
            m.school_id,
            m.username,
            m.password,
            m.email,
            m.realname,
            m.create_time,
            m.login_time,
            m.phone,
            m.status_flag,
            m.verify
        FROM manager m
        JOIN manager_role mr ON m.id = mr.manager_id
        WHERE 1 = 1
        AND mr.role_id = 2
        <if test="searchs.username!=null and searchs.username!=''">
            AND m.username LIKE CONCAT('%',#{searchs.username},'%')
        </if>
        <if test="searchs.verify!=null">
            AND m.verify = #{searchs.verify}
        </if>
        <foreach collection="sort" index="index" item="item" open="ORDER BY" separator=",">
            ${item.field} ${item['type']}
        </foreach>
        LIMIT #{startIndex}, #{pageSize}
    </select>


    <select id="getAgentAreaCount" resultType="long">
        SELECT
            count(s.province)
        FROM
            school s
        WHERE
            s.agent_id = #{agentId}
        GROUP BY
            s.province,
            s.city,
            s.village
    </select>

    <select id="getAgentAreaList" resultType="map">
        SELECT
            s.province,
            s.city,
            s.village
        FROM
            school s
        WHERE
            s.agent_id = #{agentId}
        GROUP BY
            s.province,
            s.city,
            s.village
        LIMIT #{startIndex}, #{pageSize}
    </select>


    <select id="listAllArea" resultType="map">
        SELECT
            aa.province,
            aa.city,
            aa.village,
            s.id as schoolId,
            s.title as schoolName
        FROM
            agent_area aa
        LEFT JOIN school s
        ON aa.province = s.province
        AND aa.city = s.city
        AND aa.village = s.village
        WHERE
            aa.agent_id = #{agentId}
    </select>
</mapper>